# In[1]:


# Importing the necessary package 
import yfinance 


# In[2]:


# Ignoring warning messages
import warnings 
warnings.filterwarnings("ignore")


# In[3]:


# Using the .download() method to get our data

raw_data = yfinance.download (tickers = "^GSPC ^FTSE ^N225 ^GDAXI", start = "1994-01-07", end = "2019-09-27", interval = "1d", group_by = 'ticker', auto_adjust = True, treads = True)

# tickers -> The time series we are interested in - (in our case, these are the S&P, FTSE, NIKKEI and DAX)
# start -> The starting date of our data set
# end -> The ending date of our data set (at the time of upload, this is the current date)
# interval -> The distance in time between two recorded observations. Since we're using daily closing prices, we set it equal to "1d", which indicates 1 day. 
# group_by -> The way we want to group the scraped data. Usually we want it to be "ticker", so that we have all the information about a time series in 1 variable.
# auto_adjust -> Automatically adjust the closing prices for each period. 
# treads - > Whether to use threads for mass downloading. 


# In[4]:


# Creating a back up copy in case we remove/alter elements of the data by mistake
df_comp = raw_data.copy()


# In[5]:


# Adding new columns to the data set
df_comp['spx'] = df_comp['^GSPC'].Close
df_comp['dax'] = df_comp['^GDAXI'].Close
df_comp['ftse'] = df_comp['^FTSE'].Close
df_comp['nikkei'] = df_comp['^N225'].Close


# In[6]:


df_comp = df_comp.iloc[1:] # Removing the first elements, since we always start 1 period before the first, due to time zone differences of closing prices
del df_comp['^N225']  # Removing the original tickers of the data set
del df_comp['^GSPC']
del df_comp['^GDAXI']
del df_comp['^FTSE']
df_comp=df_comp.asfreq('b') # Setting the frequency of the data
df_comp=df_comp.fillna(method='ffill') # Filling any missing values


# In[7]:


print (df_comp.head()) # Displaying the first 5 elements to make sure the data was scraped correctly
print (df_comp.tail()) # Making sure the last day we're including in the series are correct

