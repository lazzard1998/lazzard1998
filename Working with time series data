#!/usr/bin/env python
# coding: utf-8

# ### Importing Relevant Packages

# In[1]:


import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import statsmodels.graphics.tsaplots as sgt 
import statsmodels.tsa.stattools as sts 
from statsmodels.tsa.seasonal import seasonal_decompose
import seaborn as sns
sns.set()


#  

# ### Loading and Transforming the Data

# In[2]:


raw_csv_data = pd.read_csv("Index2018.csv") 
df_comp=raw_csv_data.copy()
df_comp.date = pd.to_datetime(df_comp.date, dayfirst = True)
df_comp.set_index("date", inplace=True)
df_comp=df_comp.asfreq('b')
df_comp=df_comp.fillna(method='ffill')


#  

# 
# 
# ### Removing Surplus Data

# In[3]:


df_comp['market_value']=df_comp.spx


# In[4]:


del df_comp['spx']
del df_comp['dax']
del df_comp['ftse']
del df_comp['nikkei']
size = int(len(df_comp)*0.8)
df, df_test = df_comp.iloc[:size], df_comp.iloc[size:]


#  

# ### White Noise

# In[5]:


wn = np.random.normal(loc = df.market_value.mean(), scale = df.market_value.std(), size = len(df))


# In[7]:


df['wn'] = wn


# In[8]:


df.describe()


# In[9]:


df.wn.plot(figsize = (20,5))
plt.title("White Noise Time-Series", size= 24)
plt.show()


# In[10]:


df.market_value.plot(figsize=(20,5))
plt.title("S&P Prices", size = 24)
plt.ylim(0,2300)
plt.show()


# ### Random Walk

# In[11]:


rw = pd.read_csv("RandWalk.csv")
rw.date = pd.to_datetime(rw.date, dayfirst = True)
rw.set_index("date", inplace = True)
rw = rw.asfreq('b')


# In[12]:


rw.describe()


# In[13]:


df['rw'] = rw.price


# In[14]:


df.head()


# In[15]:


df.rw.plot(figsize = (20,5))
df.market_value.plot()
plt.title("Random Walk vs S&P", size = 24)
plt.show()


# ### Stationarity

# In[16]:


sts.adfuller(df.market_value)


# In[17]:


sts.adfuller(df.wn)


# In[18]:


sts.adfuller(df.rw)


# ### Seasonality

# In[20]:


s_dec_multiplicative = seasonal_decompose(df.market_value, model = "multiplicative")
s_dec_multiplicative.plot()
plt.show()


# ### ACF

# In[29]:


sgt.plot_acf(df.market_value, lags = 40, zero = False)
plt.title("ACF S&P", size = 24)
plt.show()


# ### PACF

# In[27]:


sgt.plot_pacf(df.market_value, lags = 40, zero = False, method = ('ols'))
plt.title("PACF S&P", size = 24)
plt.show()


# In[28]:


sgt.plot_pacf(df.wn, lags = 40, zero = False, method = ('ols'))
plt.title("PACF WN", size = 24)
plt.show()

